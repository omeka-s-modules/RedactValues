<?php
echo sprintf(
    '<span id="redactions" data-redactions="%s"></span>',
    $this->escapeHtml(json_encode($redactions))
);
echo sprintf(
    '<span id="form-template" data-form-template="%s"></span>',
    $this->escapeHtml(sprintf(
        '<div class="redaction-div">%s%s</div>',
        $this->formCollection($formTemplate, false),
        sprintf('<button type="button" class="remove-redaction">%s</button>', $this->translate('Remove'))
    ))
);
?>

<div id="redactions-div"></div>
<button type="button" id="add-redaction"><?php echo $this->translate('Add a redaction'); ?></button>

<script>
const formTemplate = $('#form-template').data('formTemplate');
const redactions = $('#redactions').data('redactions');
const redactionsDiv = $('#redactions-div');
const addRedactionButton = $('#add-redaction');
const addRedaction = function(propertyId, resourceType, query, pattern, replacement, allow) {
    // Index redactions by random string.
    let randStr = Math.random().toString(36).substr(7);
    let formTemplateObj = $($.parseHTML(formTemplate.replaceAll('__INDEX__', randStr)));
    // Populate the form.
    formTemplateObj.find('.resource-type').val(resourceType);
    prepareQuery(formTemplateObj.find('.query-form-element'), resourceType, query);
    formTemplateObj.find('.property-id').val(propertyId).chosen({
        allow_single_deselect: true,
        disable_search_threshold: 10,
        width: '100%',
        include_group_label_in_selected: true,
    });
    formTemplateObj.find('.pattern').val(pattern);
    formTemplateObj.find('.replacement').val(replacement);
    $.each(allow, function(index, value) {
        formTemplateObj.find(`.allow[value="${value}"]`).prop('checked', true);
    });
    redactionsDiv.append(formTemplateObj);
};
// Prepare the query element. Code taken from asset/js/query-form.js.
const prepareQuery = function(selectingElement, resourceType, query) {
    const url = selectingElement.data('searchFiltersUrl');
    $.get(`${url}?${query}`, function(data) {
        selectingElement.find('.query-form-search-filters').html(data);
    });
    selectingElement.data('resourceType', resourceType);
    selectingElement.data('query', query);
    selectingElement.find('.query-form-query').val(query);
    (query === selectingElement.data('query'))
        ? selectingElement.find('.query-form-restore').addClass('inactive')
        : selectingElement.find('.query-form-restore').removeClass('inactive');
    (query)
        ? selectingElement.find('.query-form-clear').removeClass('inactive')
        : selectingElement.find('.query-form-clear').addClass('inactive');
};
$.each(redactions, function(propertyId, propertyRedactions) {
    $.each(propertyRedactions, function(index, propertyRedaction) {
        addRedaction(
            propertyId,
            propertyRedaction['resource_type'],
            propertyRedaction['query'],
            propertyRedaction['pattern'],
            propertyRedaction['replacement'],
            propertyRedaction['allow']
        );
    });
});
$(document).ready(function() {
    addRedactionButton.on('click', function(e) {
        addRedaction();
    });
    redactionsDiv.on('click', '.remove-redaction', function(e) {
        $(this).closest('.redaction-div').remove();
    });
    redactionsDiv.on('change', '.resource-type', function(e) {
        const thisSelect = $(this);
        thisSelect.closest('.redaction-div')
            .find('.query-form-element')
            .data('resourceType', thisSelect.val());
    });
});
</script>
